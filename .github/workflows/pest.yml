name: Pest

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - "feature/**"
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: moox-press
      DB_USER: root
      DB_PASSWORD: password
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: moox-press
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.2]
        laravel: [11.*]
        stability: [prefer-latest]
        include:
          - laravel: 11.*
            testbench: 9.*

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker check
        run: docker ps -a

      - name: Dump moox-press.sql
        run: |
          MYSQL_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q --filter ancestor=mysql:latest))
          mysql -u root -h $MYSQL_IP -p$DB_PASSWORD $DB_DATABASE < moox-press.sql

      - name: Check Tables
        run: |
          TABLES=$(docker exec $(docker ps -q --filter name=mysql) mysql -N -u $DB_USER -p$DB_PASSWORD $DB_DATABASE -e "SHOW TABLES;")
          echo "Tables in the database:"
          echo "$TABLES"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: pcov

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer update

      - name: List Installed Dependencies
        run: composer show -D

      - name: Prepare .env file
        run: |
          MYSQL_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q --filter ancestor=mysql:latest))
          cp .env.example .env
          sed -i "s/^DB_CONNECTION=.*/DB_CONNECTION=mysql/" .env
          sed -i "s/^DB_DATABASE=.*/DB_DATABASE=moox-press/" .env
          sed -i "s/^DB_PORT=.*/DB_PORT=3306/" .env
          sed -i "s/^DB_HOST=.*/DB_HOST=$MYSQL_IP/" .env
          sed -i "s/^DB_USERNAME=.*/DB_USERNAME=root/" .env
          sed -i "s/^DB_PASSWORD=.*/DB_PASSWORD=password/" .env
          cat .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Install Wordpress
        run: ./initwp.sh

      - name: Execute tests
        run: vendor/bin/pest --coverage-clover clover.xml

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          api-token: ${{ secrets.CODACY }}
          coverage-reports: clover.xml

      - name: Save Clover XML artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: clover.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: clover.xml
